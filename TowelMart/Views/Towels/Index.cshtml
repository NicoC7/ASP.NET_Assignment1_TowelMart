@model TowelMart.Models.TowelSizeViewModel

@{
    ViewData["Title"] = "Index";
}

<style>

h1 {
    font-size: 28px;
    color: #00ffcc;
    margin-top: 20px;
}

a {
    color: #00ffcc;
    text-decoration: none;
    transition: color 0.3s;
}

a:hover {
    color: #fff;
}

form {
     background-color: #000;
     padding: 10px;
}

select, input[type="text"] {
    background-color: #fff;
    color: #000;
    border: 1px solid #00ffcc;
    padding: 5px;
    margin-right: 10px;
}

input[type="submit"] {
    background-color: #00ffcc;
    color: #000;
    border: none;
    padding: 8px 16px;
    cursor: pointer;
    transition: background-color 0.3s;
}

input[type="submit"]:hover {
    background-color: #000;
    color: #00ffcc;
}


body {
    background-color: #000;
    color: #00ffcc;
}

table {
    border-collapse: collapse;
    width: 100%;
    margin-top: 20px;
    background-color: #000;
    color: #fff;
}

table, th, td {
    border: 5px solid #00ffcc;
    color: white;
}


table td a {
    background-color: #00ffcc;
    color: #000;
    border: none;
    padding: 8px 16px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 14px;
    margin: 4px 2px;
    cursor: pointer;
    transition: background-color 0.3s;
}

table td a:hover {
    background-color: #000;
    color: #00ffcc;
}
</style>

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Towels" asp-action="Index" method="get">
    <p>

        <select asp-for="towelSize" asp-items="Model.Sizes">
            <option value="">All</option>
        </select>

        Color: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Towels[0].Color)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Towels[0].ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Towels[0].Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Towels[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Towels[0].StockQuantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Towels[0].Material)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Towels[0].Brand)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Towels[0].ImageUrl)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Towels[0].CustomerReviewRating)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Towels)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Color)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StockQuantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Material)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.ImageUrl)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.CustomerReviewRating)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>

